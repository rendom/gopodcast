// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feed.proto

package feed

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FeedByIdRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedByIdRequest) Reset()         { *m = FeedByIdRequest{} }
func (m *FeedByIdRequest) String() string { return proto.CompactTextString(m) }
func (*FeedByIdRequest) ProtoMessage()    {}
func (*FeedByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_feed_800a685b804b1e34, []int{0}
}
func (m *FeedByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedByIdRequest.Unmarshal(m, b)
}
func (m *FeedByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedByIdRequest.Marshal(b, m, deterministic)
}
func (dst *FeedByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedByIdRequest.Merge(dst, src)
}
func (m *FeedByIdRequest) XXX_Size() int {
	return xxx_messageInfo_FeedByIdRequest.Size(m)
}
func (m *FeedByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedByIdRequest proto.InternalMessageInfo

func (m *FeedByIdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SubscribeRequest struct {
	FeedId               int32    `protobuf:"varint,1,opt,name=feed_id,json=feedId" json:"feed_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_feed_800a685b804b1e34, []int{1}
}
func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(dst, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetFeedId() int32 {
	if m != nil {
		return m.FeedId
	}
	return 0
}

func (m *SubscribeRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type SubscribeResponse struct {
	Success              int32    `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_feed_800a685b804b1e34, []int{2}
}
func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (dst *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(dst, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetSuccess() int32 {
	if m != nil {
		return m.Success
	}
	return 0
}

type FeedListRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	PageNumber           int32    `protobuf:"varint,2,opt,name=page_number,json=pageNumber" json:"page_number,omitempty"`
	ResultPerPage        int32    `protobuf:"varint,3,opt,name=result_per_page,json=resultPerPage" json:"result_per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedListRequest) Reset()         { *m = FeedListRequest{} }
func (m *FeedListRequest) String() string { return proto.CompactTextString(m) }
func (*FeedListRequest) ProtoMessage()    {}
func (*FeedListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_feed_800a685b804b1e34, []int{3}
}
func (m *FeedListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedListRequest.Unmarshal(m, b)
}
func (m *FeedListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedListRequest.Marshal(b, m, deterministic)
}
func (dst *FeedListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedListRequest.Merge(dst, src)
}
func (m *FeedListRequest) XXX_Size() int {
	return xxx_messageInfo_FeedListRequest.Size(m)
}
func (m *FeedListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedListRequest proto.InternalMessageInfo

func (m *FeedListRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *FeedListRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *FeedListRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

type FeedListResponse struct {
	Results              []*Feed  `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeedListResponse) Reset()         { *m = FeedListResponse{} }
func (m *FeedListResponse) String() string { return proto.CompactTextString(m) }
func (*FeedListResponse) ProtoMessage()    {}
func (*FeedListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_feed_800a685b804b1e34, []int{4}
}
func (m *FeedListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeedListResponse.Unmarshal(m, b)
}
func (m *FeedListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeedListResponse.Marshal(b, m, deterministic)
}
func (dst *FeedListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedListResponse.Merge(dst, src)
}
func (m *FeedListResponse) XXX_Size() int {
	return xxx_messageInfo_FeedListResponse.Size(m)
}
func (m *FeedListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedListResponse proto.InternalMessageInfo

func (m *FeedListResponse) GetResults() []*Feed {
	if m != nil {
		return m.Results
	}
	return nil
}

type Feed struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Image       string `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	// Total subscribers
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updatedAt" json:"updatedAt,omitempty"`
	LatestFetch          *timestamp.Timestamp `protobuf:"bytes,8,opt,name=latestFetch" json:"latestFetch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Feed) Reset()         { *m = Feed{} }
func (m *Feed) String() string { return proto.CompactTextString(m) }
func (*Feed) ProtoMessage()    {}
func (*Feed) Descriptor() ([]byte, []int) {
	return fileDescriptor_feed_800a685b804b1e34, []int{5}
}
func (m *Feed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feed.Unmarshal(m, b)
}
func (m *Feed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feed.Marshal(b, m, deterministic)
}
func (dst *Feed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feed.Merge(dst, src)
}
func (m *Feed) XXX_Size() int {
	return xxx_messageInfo_Feed.Size(m)
}
func (m *Feed) XXX_DiscardUnknown() {
	xxx_messageInfo_Feed.DiscardUnknown(m)
}

var xxx_messageInfo_Feed proto.InternalMessageInfo

func (m *Feed) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Feed) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Feed) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Feed) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Feed) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Feed) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Feed) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Feed) GetLatestFetch() *timestamp.Timestamp {
	if m != nil {
		return m.LatestFetch
	}
	return nil
}

func init() {
	proto.RegisterType((*FeedByIdRequest)(nil), "FeedByIdRequest")
	proto.RegisterType((*SubscribeRequest)(nil), "SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "SubscribeResponse")
	proto.RegisterType((*FeedListRequest)(nil), "FeedListRequest")
	proto.RegisterType((*FeedListResponse)(nil), "FeedListResponse")
	proto.RegisterType((*Feed)(nil), "Feed")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FeedService service

type FeedServiceClient interface {
	Search(ctx context.Context, in *FeedListRequest, opts ...grpc.CallOption) (FeedService_SearchClient, error)
	GetFeedById(ctx context.Context, in *FeedByIdRequest, opts ...grpc.CallOption) (*Feed, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeResponse, error)
}

type feedServiceClient struct {
	cc *grpc.ClientConn
}

func NewFeedServiceClient(cc *grpc.ClientConn) FeedServiceClient {
	return &feedServiceClient{cc}
}

func (c *feedServiceClient) Search(ctx context.Context, in *FeedListRequest, opts ...grpc.CallOption) (FeedService_SearchClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FeedService_serviceDesc.Streams[0], c.cc, "/FeedService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &feedServiceSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FeedService_SearchClient interface {
	Recv() (*FeedListResponse, error)
	grpc.ClientStream
}

type feedServiceSearchClient struct {
	grpc.ClientStream
}

func (x *feedServiceSearchClient) Recv() (*FeedListResponse, error) {
	m := new(FeedListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *feedServiceClient) GetFeedById(ctx context.Context, in *FeedByIdRequest, opts ...grpc.CallOption) (*Feed, error) {
	out := new(Feed)
	err := grpc.Invoke(ctx, "/FeedService/GetFeedById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feedServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeResponse, error) {
	out := new(SubscribeResponse)
	err := grpc.Invoke(ctx, "/FeedService/Subscribe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FeedService service

type FeedServiceServer interface {
	Search(*FeedListRequest, FeedService_SearchServer) error
	GetFeedById(context.Context, *FeedByIdRequest) (*Feed, error)
	Subscribe(context.Context, *SubscribeRequest) (*SubscribeResponse, error)
}

func RegisterFeedServiceServer(s *grpc.Server, srv FeedServiceServer) {
	s.RegisterService(&_FeedService_serviceDesc, srv)
}

func _FeedService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FeedListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FeedServiceServer).Search(m, &feedServiceSearchServer{stream})
}

type FeedService_SearchServer interface {
	Send(*FeedListResponse) error
	grpc.ServerStream
}

type feedServiceSearchServer struct {
	grpc.ServerStream
}

func (x *feedServiceSearchServer) Send(m *FeedListResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _FeedService_GetFeedById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeedByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedServiceServer).GetFeedById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FeedService/GetFeedById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedServiceServer).GetFeedById(ctx, req.(*FeedByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FeedService_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeedServiceServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FeedService/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeedServiceServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "FeedService",
	HandlerType: (*FeedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeedById",
			Handler:    _FeedService_GetFeedById_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _FeedService_Subscribe_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Search",
			Handler:       _FeedService_Search_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "feed.proto",
}

func init() { proto.RegisterFile("feed.proto", fileDescriptor_feed_800a685b804b1e34) }

var fileDescriptor_feed_800a685b804b1e34 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0x45, 0x76, 0x6c, 0x57, 0x23, 0xda, 0xd8, 0x4b, 0xa1, 0x42, 0x17, 0xbb, 0x3a, 0x04, 0x5f,
	0xba, 0x2e, 0xce, 0xa5, 0x87, 0x5e, 0x5a, 0x4a, 0x8a, 0xa1, 0x94, 0x20, 0xf7, 0x6e, 0x24, 0xed,
	0xc4, 0x59, 0x90, 0x2d, 0x65, 0x3f, 0x0a, 0xf9, 0x2b, 0xfd, 0x05, 0xfd, 0x99, 0x65, 0x76, 0x25,
	0xc7, 0xa8, 0x07, 0xdf, 0xf4, 0xde, 0xbc, 0xa7, 0x79, 0xec, 0x1b, 0x80, 0x07, 0x44, 0xc1, 0x1b,
	0x55, 0x9b, 0x3a, 0x99, 0xef, 0xeb, 0x7a, 0x5f, 0xe1, 0xca, 0xa1, 0xc2, 0x3e, 0xac, 0x8c, 0x3c,
	0xa0, 0x36, 0xf9, 0xa1, 0xf1, 0x82, 0xf4, 0x3d, 0x5c, 0xdf, 0x21, 0x8a, 0xaf, 0xcf, 0x1b, 0x91,
	0xe1, 0x93, 0x45, 0x6d, 0xd8, 0x1b, 0x18, 0x48, 0x11, 0x07, 0x8b, 0x60, 0x39, 0xca, 0x06, 0x52,
	0xa4, 0xdf, 0x60, 0xba, 0xb5, 0x85, 0x2e, 0x95, 0x2c, 0xb0, 0xd3, 0xbc, 0x83, 0x09, 0x6d, 0xd9,
	0x9d, 0x84, 0x63, 0x82, 0x1b, 0x41, 0x03, 0xab, 0x51, 0xd1, 0x60, 0xe0, 0x07, 0x04, 0x37, 0x22,
	0xfd, 0x00, 0xb3, 0xb3, 0xbf, 0xe8, 0xa6, 0x3e, 0x6a, 0x64, 0x31, 0x4c, 0xb4, 0x2d, 0x4b, 0xd4,
	0xba, 0xfd, 0x4d, 0x07, 0xd3, 0xc6, 0xe7, 0xfa, 0x21, 0xb5, 0xe9, 0x76, 0xbe, 0x85, 0xd1, 0x93,
	0x45, 0xf5, 0xec, 0xa4, 0x61, 0xe6, 0x01, 0x9b, 0x43, 0xd4, 0xe4, 0x7b, 0xdc, 0x1d, 0xed, 0xa1,
	0x40, 0xd5, 0x2e, 0x05, 0xa2, 0x7e, 0x3a, 0x86, 0xdd, 0xc0, 0xb5, 0x42, 0x6d, 0x2b, 0xb3, 0x6b,
	0x50, 0xed, 0x68, 0x10, 0x0f, 0x9d, 0xe8, 0xb5, 0xa7, 0xef, 0x51, 0xdd, 0xe7, 0x7b, 0x4c, 0x6f,
	0x61, 0xfa, 0xb2, 0xb1, 0xcd, 0x37, 0x87, 0x89, 0x17, 0x51, 0xbe, 0xe1, 0x32, 0x5a, 0x8f, 0x38,
	0x69, 0xb2, 0x8e, 0x4d, 0xff, 0x0e, 0xe0, 0x8a, 0x98, 0xfe, 0xa3, 0xb1, 0x29, 0x0c, 0xad, 0xaa,
	0x5c, 0x9c, 0x30, 0xa3, 0x4f, 0x8a, 0x6f, 0xa4, 0xa9, 0xfc, 0xf6, 0x30, 0xf3, 0x80, 0x2d, 0x20,
	0x12, 0x48, 0xaf, 0xd2, 0x18, 0x59, 0x1f, 0xe3, 0x2b, 0x37, 0x3b, 0xa7, 0xc8, 0x27, 0x0f, 0x94,
	0x7a, 0xe4, 0x7d, 0x0e, 0xb0, 0x4f, 0x10, 0x96, 0x0a, 0x73, 0x83, 0xe2, 0x8b, 0x89, 0xc7, 0x8b,
	0x60, 0x19, 0xad, 0x13, 0xee, 0xcb, 0xe6, 0x5d, 0xd9, 0xfc, 0x57, 0x57, 0x76, 0xf6, 0x22, 0x26,
	0xa7, 0x6d, 0x44, 0xeb, 0x9c, 0x5c, 0x76, 0x9e, 0xc4, 0xec, 0x33, 0x44, 0x55, 0x6e, 0x50, 0x9b,
	0x3b, 0x34, 0xe5, 0x63, 0xfc, 0xea, 0xa2, 0xf7, 0x5c, 0xbe, 0xfe, 0x13, 0x40, 0x44, 0x4f, 0xb5,
	0x45, 0xf5, 0x5b, 0x96, 0xc8, 0x56, 0x30, 0xde, 0x62, 0xae, 0xca, 0x47, 0x36, 0xe5, 0xbd, 0xaa,
	0x93, 0x19, 0xef, 0x57, 0xf1, 0x31, 0x60, 0x37, 0x10, 0x7d, 0x47, 0xd3, 0x5d, 0x6b, 0xeb, 0x3a,
	0x3b, 0xdc, 0xc4, 0x97, 0xc3, 0xd6, 0x10, 0x9e, 0x2e, 0x8d, 0xcd, 0x78, 0xff, 0x76, 0x13, 0xc6,
	0xff, 0x3b, 0xc4, 0x62, 0xec, 0xd2, 0xdf, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x33, 0xe9,
	0x35, 0x3c, 0x03, 0x00, 0x00,
}
